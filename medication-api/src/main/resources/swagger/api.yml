swagger: "2.0"
info:
  description: "This is the pill dispenser medication API."
  version: "1.0.0"
  title: "Medication API"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "bocaletm@oregonstate.edu"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "medication-api:8080"
basePath: "/v2"
tags:
- name: "medication"
  description: "Medications available in pill dispenser"
  externalDocs:
    description: "Project Documentation"
    url: "https://bocaletm.github.io/cs361-group11-project/"
schemes:
- "https"
- "http"
paths:
  /medication:
    post:
      tags:
      - "medication"
      summary: "Add a new medication to the database"
      description: ""
      operationId: "addMed"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Medication object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Medication"
      responses:
        405:
          description: "Invalid input"
    put:
      tags:
      - "medication"
      summary: "Update an existing medication"
      description: ""
      operationId: "updateMed"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Medication object that needs to be added to the database"
        required: true
        schema:
          $ref: "#/definitions/Medication"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Medication not found"
        405:
          description: "Validation exception"
  /medication/findByName/{name}:
    get:
      tags:
      - "medication"
      summary: "Returns Medication Data for Any Medication in the System"
      description: "Muliple names can be provided with comma separated strings. Use med1, med2, med3 for testing."
      operationId: "findMedsByName"
      produces:
      - "application/json"
      parameters:
      - name: "name"
        in: "path"
        description: "The name that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Medication"
        400:
          description: "Invalid name"
  /medication/getAll:
    get:
      tags:
      - "medication"
      summary: "Returns List of All Medications in the System"
      description: "Returns array of string"
      operationId: "GetMeds"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Medication"
        400:
          description: "Invalid name"
definitions:
  Medication:
    type: "object"
    required:
    - "name"
    - "nih-url"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "acetaminophen"
      nih-url:
        type: "string"
        example: "https://druginfo.nlm.nih.gov/drugportal/name/acetaminophen"
      contraindications:
        type: "array"
        items:
          type: "string"
          example: 
            - "ethanol"
            - "sodium nitrite"
      status:
        type: "string"
        description: "supply in dispenser"
        enum:
        - "available"
        - "short"
        - "out"
externalDocs:
  description: "Check out the project portfolio"
  url: "https://bocaletm.github.io/cs361-group11-project/"
